COMMENT = _{ "/*" ~ (!"*/" ~ ANY)* ~ "*/" | "//" ~ (!line_terminator ~ ANY)* } 
WHITESPACE = _{
  "\u{0009}" |
  "\u{000B}" |
  "\u{000C}" |
  "\u{0020}" |
  "\u{00A0}" |
  "\u{FEFF}" |
  SPACE_SEPARATOR |
  line_terminator
}

line_continuation = _{ "\\" ~ line_terminator_sequence }
line_terminator = _{ "\u{000A}" | "\u{000D}" | "\u{2028}" | "\u{2029}" }
line_terminator_sequence = _{ "\u{000D}" ~ "\u{000A}" | line_terminator }

array = {  "[" ~ value ~ ("," ~ value)* ~ ","? ~ "]"? | "[" ~ "]"? }

boolean = @{ "true" | "false" }

char_escape_sequence = @{ single_escape_char | non_escape_char }

char_literal = _{ !("\\" | line_terminator) ~ ANY }

decimal_integer_literal = _{ "0" | ASCII_NONZERO_DIGIT ~ ASCII_DIGIT* }

decimal_literal = _{
  decimal_integer_literal ~ "." ~ ASCII_DIGIT* ~ exponent_part? |
  "." ~ ASCII_DIGIT+~ exponent_part? |
  decimal_integer_literal ~ exponent_part?
}

double_quote_char = _{
  "\\" ~ escape_sequence |
  line_continuation |
  !"\"" ~ char_literal
}

escape_char = _{ single_escape_char | ASCII_DIGIT | "x" | "u" }

escape_sequence = _{
  char_escape_sequence |
  nul_escape_sequence |
  "x" ~ hex_escape_sequence |
  "u" ~ unicode_escape_sequence
}

exponent_part = _{ ^"e" ~ ("+" | "-")? ~ ASCII_DIGIT+ }

hex_escape_sequence = @{ ASCII_HEX_DIGIT{2} }

hex_integer_literal = _{ ^"0x" ~ ASCII_HEX_DIGIT+ }

symbol_start = { UPPERCASE_LETTER | LOWERCASE_LETTER }
symbol_chars = { UPPERCASE_LETTER | LOWERCASE_LETTER | "_" | LETTER_NUMBER }
symbol_inner = @{ symbol_start ~ symbol_chars* }
symbol = ${ ":" ~ symbol_inner }

non_escape_char = _{ !(escape_char | line_terminator) ~ ANY }

nul_escape_sequence = @{ "0" }

nil = @{ "nil" }

number = @{ ("+" | "-")? ~ numeric_literal }

numeric_literal = _{
  hex_integer_literal |
  decimal_literal
}

object = { "{" ~ "}" | "{" ~ pair ~ ("," ~ pair)* ~ ","? ~ "}"? }

rocket_key = { symbol | string }
rocket_pair = { rocket_key ~ "=>" ~ value }
symbol_pair = { symbol_inner ~ ":" ~ value }
pair = _{ rocket_pair | symbol_pair }

single_escape_char = _{ "'" | "\"" | "\\" | "b" | "f" | "n" | "r" | "t" | "v" }

single_quote_char = _{
  "\\" ~ escape_sequence |
  line_continuation |
  !"'" ~ char_literal
}

dq_inner = @{ double_quote_char* }
dq_string = ${ "\"" ~ dq_inner ~ "\""? }

sq_inner = @{ single_quote_char* }
sq_string = ${ "'" ~ sq_inner ~ "'"? }

string = _{ sq_string | dq_string }

unicode_escape_sequence = @{ ASCII_HEX_DIGIT{4} }

unicode_letter = _{
  UPPERCASE_LETTER |
  LOWERCASE_LETTER |
  TITLECASE_LETTER |
  MODIFIER_LETTER |
  OTHER_LETTER |
  LETTER_NUMBER
}

value = _{ nil | boolean | string | number | object | array | EOI }
